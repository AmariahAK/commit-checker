name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -r requirements.txt
    
    - name: Build package
      run: python -m build
    
    - name: Run tests
      run: |
        # Basic functionality tests
        python -m commit_checker.cli --help
        python -m commit_checker.cli --check-only --scan || true
        python -m commit_checker.cli --check-only --repos-summary || true
        python -m commit_checker.cli --check-only --most-active --week || true
    
    - name: Create release tarball
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        mkdir -p "release-v$VERSION"
        cp README.md LICENSE.md CHANGELOG.md requirements.txt setup.py "release-v$VERSION/"
        cp -r commit_checker/ scripts/ "release-v$VERSION/"
        tar -czf "commit-checker-v$VERSION.tar.gz" "release-v$VERSION"
    
    - name: Extract version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: commit-checker v${{ steps.version.outputs.version }}
        body: |
          # ðŸš€ commit-checker v${{ steps.version.outputs.version }}
          
          ## ðŸ”¥ Major Features
          - Repository scanning with `--scan` flag
          - Complete repo summaries with `--repos-summary`
          - Most active repository detection with `--most-active`
          - Configurable output modes (emoji/plain)
          - Enhanced uninstall with `--force` option
          
          ## ðŸ“¦ Installation
          ```bash
          # Quick install (recommended)
          curl -s https://raw.githubusercontent.com/AmariahAK/commit-checker/main/scripts/install-safe.sh | bash
          
          # Or via pip
          pip install git+https://github.com/AmariahAK/commit-checker.git@v${{ steps.version.outputs.version }}
          ```
          
          ## ðŸ“Š New Commands
          ```bash
          commit-checker --scan                    # Scan all repositories
          commit-checker --repos-summary           # Show repo statistics  
          commit-checker --most-active --week      # Most active repo this week
          ```
          
          See [CHANGELOG.md](https://github.com/AmariahAK/commit-checker/blob/main/CHANGELOG.md) for full details.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./commit-checker-v${{ steps.version.outputs.version }}.tar.gz
        asset_name: commit-checker-v${{ steps.version.outputs.version }}.tar.gz
        asset_content_type: application/gzip
    
    # Optional: Publish to PyPI (requires PYPI_API_TOKEN secret)
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: twine upload dist/*
